<div class="mx-auto relative">
  <div class="alert-error hidden absolute w-full bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
    Problemo
  </div>

  <form id="post" action="<%= Routes.posts_path(token) %>" method="post">
    <div class="mb-2">
      <label class="block text-gray-700 font-bold mb-2" for="post_body">
        What's on your mind?
      </label>

      <textarea name="body" id="post_body" class="shadow rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" autofocus></textarea>
    </div>

    <input type="submit" value="Post" class="hidden cursor-pointer bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded" />
  </form>

  <h2 class="text-xl my-4">Latest posts</h2>

  <ul role="list" id="posts" class="pb-4 mt-4">
    <%= Enum.map(@posts, fn post -> %>
      <li class="my-4 py-4 flex rounded bg-white shadow">
        <div class="mx-3 w-full" data-post-id="<%= post.id %>">
          <p class=""><%= post.body %></p>

          <div class="flex flex-row justify-between w-full">
            <div class="text-sm text-gray-400">
              <span class="text-green-600"><%= post.user.username %></span>
              at <%= posted_at(post.inserted_at, post.user.timezone) %>
            </div>
            <div>
              <span class="like-count"><%= post.likes_count %></span>
              <a href="<%= Routes.post_like_path(token, id: post.id) %>" class="like text-sm">Like</a>
            </div>
          </div>
        </div>
      </li>
    <% end) %>
  </ul>
</div>

<script type="application/javascript">
document.addEventListener("DOMContentLoaded", () => {
  let newPost = (post) => {
    let newPost = document.createElement("li");
    newPost.className = 'my-4 py-4 flex rounded bg-white shadow';

    newPost.innerHTML = `
    <div class="mx-3 w-full" data-post-id="${post.id}">
      <p class="">${post.body}</p>

      <div class="flex flex-row justify-between w-full">
        <div class="text-sm text-gray-400">
          <span class="text-green-600">${post.username}</span> at ${post.inserted_at}
        </div>
        <div>
          <span class="like-count">0</span>
          <a href="/posts/${post.id}/like" class="like text-sm">Like</a>
        </div>
      </div>
    </div>
    `;

    let list = document.querySelector("#posts");
    list.prepend(newPost);
  };

  let newLike = (like) => {
    let post = document.querySelector(`[data-post-id="${like.post_id}"]`);
    let likeCountElement = post.querySelector(".like-count");
    let likeCount = Number(likeCountElement.innerHTML) + 1;
    likeCountElement.innerHTML = likeCount;
  };

  const eventHandlers = {
    "posts/new": newPost,
    "likes/new": newLike,
  };

  let socket = new WebSocket("ws://<%= @host %>:<%= @port %>/socket");

  socket.onmessage = (e) => {
    const message = JSON.parse(e.data);

    if (eventHandlers[message.event]) {
      const handler = eventHandlers[message.event];

      handler(message.data);
    }
  };

  const createPost = (body) => {
    fetch("/posts", {
      method: "POST",
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
      },
      body: JSON.stringify({ body })
    });
  };

  const createLike = (href) => {
    fetch(href, {
      method: "POST",
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
      },
      body: "{}",
    }).then((response) => {
      if (!response.ok) {
        let alert = document.querySelector(".alert-error");
        alert.innerHTML = "You've already liked this!";
        alert.classList.remove("hidden");

        setTimeout(() => {
          alert.classList.add("hidden");
        }, 4000);
      }
    });
  };

  let isShiftPressed = false;

  document.querySelector("#post_body").addEventListener("keyup", (e) => {
    if (e.key == "Shift") {
      isShiftPressed = false;
    }
  });

  document.querySelector("#post_body").addEventListener("keydown", (e) => {
    if (e.key == "Shift") {
      isShiftPressed = true;
    }

    if (e.key == "Enter" && !isShiftPressed) {
      e.preventDefault();
      createPost(e.target.value);
      e.target.value = "";
    }
  });

  document.addEventListener("click", (e) => {
    let target = e.target;
    if (target.classList.contains("like")) {
      e.preventDefault();
      createLike(target.href);
    }
  });
});
</script>
